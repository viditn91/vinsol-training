// Importing the CSV data into a mysql datbase

# mysqlimport -u root --local 
  --fields-terminated-by=',' 
  --fields-escaped-by='' 
  --lines-terminated-by='\n' \email_campaign visitors.txt



// 1.	What all cities did people respond from ?

mysql> select distinct city from visitors;
+-----------+
| city      |
+-----------+
|  Lucknow  |
|  Chennai  |
|  Kolkatta |
|  Delhi    |
|  Mumbai   |
+-----------+
5 rows in set (0.01 sec)



// 2. 	How many people responded from each city ?

mysql> 	select city, count(*) as no_of_people_responded
	from visitors
	group by city;
+-----------+------------------------+
| city      | no_of_people_responded |
+-----------+------------------------+
|  Chennai  |                     42 |
|  Delhi    |                     40 |
|  Kolkatta |                     38 |
|  Lucknow  |                     39 |
|  Mumbai   |                     41 |
+-----------+------------------------+
5 rows in set (0.01 sec)



// 3.	Which city were the maximum respondents from?

mysql> 	select respondents.city as city from 
	(select city, count(email) as counts from visitors group by city) as respondents,
	(select count(email) as counts from visitors group by city order by count(email) desc limit 1) as max_respondents	 
	where respondents.counts = max_respondents.counts;
+----------+
| city     |
+----------+
|  Chennai |
+----------+
1 row in set (0.01 sec)



// 4.	What all email domains did people respond from ?

mysql> 	select distinct SUBSTR(email, INSTR(email, '@')+1, INSTR(email, '.')-1) as domain 
	from visitors;
+--------------+
| domain       |
+--------------+
| hotmail.com  |
| yahoo.com    |
| me.com       |
| gmail.com    |
+--------------+
4 rows in set (0.00 sec)



// 5. 	Which is the most popular email domain among the respondents ?

mysql>	
+---------------------+
| @max := max(counts) |
+---------------------+
|                  51 |
+---------------------+
1 row in set (0.02 sec)

mysql> 	select domains.domain as most_popular_domain from 
	(select SUBSTR(email, INSTR(email, '@')+1, INSTR(email, '.')-1) as domain, count(*) as counts from visitors group by domain) as domains,
	(select count(*) as counts from visitors group by SUBSTR(email, INSTR(email, '@')+1, INSTR(email, '.')-1) order by count(*) desc limit 1) as famous_domains 
	where domains.counts = famous_domains.counts;

+---------------------+
| most_popular_domain |
+---------------------+
| me.com              |
| yahoo.com           |
+---------------------+
2 rows in set (0.00 sec)




